{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredient.module.css","components/UI/Input/Input.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Orders/CheckoutSummary/CheckoutSummary.module.css","components/Orders/Order.module.css","hoc/Auxiliary/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","containers/BurgerBuilder/BurgerBuilder.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","components/Orders/CheckoutSummary/CheckoutSummary.js","containers/Checkout/Checkout.js","components/Orders/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","auxiliary","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","show","DesktopOnly","backdrop","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Auxiliary","close","join","Layout","state","showSideDrawer","sideDrawerCloseHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","console","log","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","modal","hide","Modal","style","transform","opacity","button","click","Button","btnType","orderSummary","ingredientSummary","textTransform","textAlign","fontFamily","orderCancel","orderContinue","instance","axios","create","baseURL","spinner","Loader","INGERDIENT_PRICES","salad","cheese","bacon","meat","BurgerBuilder","totalPrice","purchased","loading","addIngredientHandler","updatedCount","updatedIngredients","updatedPrice","updatePurchaseState","removeIngredientHandler","oldCount","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","get","then","response","data","sum","disabledInfo","Spinner","OrderSummary","border","boxSizing","boxShadow","width","input","inputElement","elementType","InputElement","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","email","street","zipcode","country","deliveryMethod","orderHandler","event","preventDefault","formData","formIdentifierElement","order","orderData","post","catch","error","inputChangeHandler","elementIndex","updatedOrderForm","formElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","checkoutSummary","CheckoutSummary","margin","left","Checkout","orderCancelHandler","goBack","orderContinueHandler","replace","query","URLSearchParams","location","entries","param","path","match","render","ingredientName","amount","ingredientOutput","ig","display","padding","Order","Orders","orders","res","fetchedOrders","err","App","component","Boolean","window","hostname","app","basename","ProcessingInstruction","env","PUBLIC_URL","StrictMode","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f23864c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2VvKB\",\"BreadTop\":\"BurgerIngredient_BreadTop__2mNcR\",\"Seeds1\":\"BurgerIngredient_Seeds1__3iCsn\",\"Seeds2\":\"BurgerIngredient_Seeds2__1TBQi\",\"Meat\":\"BurgerIngredient_Meat__FJ4xD\",\"Cheese\":\"BurgerIngredient_Cheese__2uzge\",\"Salad\":\"BurgerIngredient_Salad__1Muol\",\"Bacon\":\"BurgerIngredient_Bacon__1VU-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2u24L\",\"Label\":\"Input_Label__1SpH8\",\"InputElement\":\"Input_InputElement__HfAqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1DyZ5\",\"Open\":\"SideDrawer_Open__1jqbZ\",\"Close\":\"SideDrawer_Close__1mC5S\",\"Logo\":\"SideDrawer_Logo__QcwaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__Q718R\",\"Label\":\"BuildControl_Label__Fhuy0\",\"Less\":\"BuildControl_Less__2N3kf\",\"More\":\"BuildControl_More__3Fmb3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1pIxp\",\"Logo\":\"Toolbar_Logo__1fC4O\",\"DesktopOnly\":\"Toolbar_DesktopOnly__WAd5j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3xfyz\",\"active\":\"NavigationItem_active__3htDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__HpvUo\",\"OrderButton\":\"BuildControls_OrderButton__1GaSQ\",\"enable\":\"BuildControls_enable__1rR-F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1f5Cr\",\"Success\":\"Button_Success__nOEK2\",\"Danger\":\"Button_Danger__O2X3j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__tuCuJ\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1kBQw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1F0WG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3ZaJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__bPwd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2eCDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__rdUBR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1otjc\",\"load3\":\"Spinner_load3__3fI9R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1LLR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2ecij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__eWO-K\"};","const auxiliary = (props) => props.children;\r\n\r\nexport default auxiliary;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"A Burger\"/>\r\n    </div>\r\n);\r\nexport default logo;;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className ={classes.NavigationItem}>\r\n        <NavLink to={props.link} exact activeClassName={classes.active} >{props.children}</NavLink>\r\n    </li>\r\n);\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = () => (\r\n    <ul className ={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" >Burger Builder</NavigationItem>\r\n        <NavigationItem link =\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div onClick = {props.clicked} className={classes.DrawerToggle}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '..//NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.show}/>\r\n        <div className={classes.Logo}><Logo /></div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return(\r\n        <Auxiliary>\r\n            <Backdrop show ={props.open} clicked={props.close} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Auxiliary>\r\n        \r\n    );\r\n}\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport Auxiliary from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component{\r\n    state ={\r\n        showSideDrawer : false\r\n    }\r\n\r\n    sideDrawerCloseHandler = () => {\r\n        this.setState({showSideDrawer : false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return({showSideDrawer : !prevState.showSideDrawer})\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Auxiliary>\r\n                <Toolbar show={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer \r\n                open={this.state.showSideDrawer} \r\n                close ={this.sideDrawerCloseHandler} /> \r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render(){\r\n        let ingredient = null;\r\n\r\n    switch(this.props.type){\r\n        case ('bread-bottom') :\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        \r\n        case ('bread-top'):\r\n            ingredient = (<div className={classes.BreadTop}>\r\n                            <div className={classes.Seeds1}></div>\r\n                            <div className={classes.Seeds2}></div>\r\n                        </div>); break;\r\n        \r\n        case ('meat'):\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        \r\n        case ('cheese'):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        \r\n        case ('salad'):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        \r\n        case ('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        \r\n        default :\r\n            ingredient = null;\r\n    }\r\n    return ingredient;\r\n    }\r\n} \r\nBurgerIngredient.propTypes = {\r\n    type : PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n        });\r\n    }).reduce((arr,el) => {\r\n        return arr.concat(el);\r\n    },[]);\r\n    if(transformedIngredients.length===0){\r\n        transformedIngredients = <p>Please Add At Least One Ingredient!</p>\r\n    }\r\n    console.log(transformedIngredients);\r\n    return(\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type='bread-top'/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type='bread-bottom'/>\r\n        </div>\r\n    );\r\n}\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className = {classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled= {props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label : 'Salad', type : 'salad'},\r\n    {label : 'Cheese', type : 'cheese'},\r\n    {label : 'Bacon', type : 'bacon'},\r\n    {label : 'Meat', type : 'meat'}\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    \r\n    <div className={classes.BuildControls}>\r\n\r\n        <p>Current Price : <strong>{props.price.toFixed(2)} $</strong></p>\r\n\r\n        {controls.map(ctrl => (\r\n            <BuildControl\r\n             key={ctrl.label}\r\n             label={ctrl.label} \r\n             added={()=> props.ingredientAdded(ctrl.type)}\r\n             removed={()=> props.ingredientRemoved(ctrl.type)}\r\n             disabled = {props.disabled[ctrl.type]} />\r\n        ))}\r\n\r\n        <button \r\n        className={classes.OrderButton} \r\n        disabled={!props.purchasable}\r\n        onClick ={props.ordered}>ORDER NOW!</button>\r\n    </div>\r\n);\r\n    \r\nexport default buildControls;","import React from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst modal = (props) => (\r\n    <Auxiliary>\r\n        <Backdrop show={props.show} clicked={props.hide}/>\r\n        <div \r\n        className ={classes.Modal} \r\n        style = {{\r\n            transform : props.show? 'translateY(0)':'translate(-100vh)',\r\n            opacity: props.show ? '1' : '0'\r\n        }}>\r\n            {props.children}\r\n        </div>\r\n    </Auxiliary>\r\n    \r\n);\r\nexport default modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button \r\n    onClick={props.click}\r\n    className={[classes.Button, classes[props.btnType]].join(' ')} >{props.children}</button>\r\n);\r\nexport default button;","import React from 'react';\r\nimport Auxiliary from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n    return <li key={igKey}><span style={{textTransform :'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}</li>;\r\n    });\r\n\r\n    return(\r\n        <Auxiliary>\r\n            <h2 style={{textAlign:'center', fontFamily:'cursive'}}>Your Order Summary</h2>\r\n            <p>A delicious burger with the following ingredients : </p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p style={{textAlign:'right'}}>Total Price : <strong>{props.price.toFixed(2)} $</strong></p>\r\n            <p>Continue to check out?</p>\r\n            <Button btnType=\"Danger\" click={props.orderCancel}>CANCEL</Button>\r\n            <Button btnType=\"Success\" click={props.orderContinue} >CONTINUE</Button>\r\n        </Auxiliary>\r\n    );\r\n    \r\n};\r\n\r\nexport default orderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL : 'https://react-burger-builder-3c0c3.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nconst INGERDIENT_PRICES= {\r\n    salad : 0.5,\r\n    cheese : 1,\r\n    bacon : 0.7,\r\n    meat : 1.2\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        ingredients : null,\r\n        totalPrice : 4,\r\n        purchasable : false,\r\n        purchased : false,\r\n        loading : false\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://react-burger-builder-3c0c3.firebaseio.com/ingredients.json')\r\n            .then( response => {\r\n                this.setState({ingredients : response.data})\r\n            })\r\n    }\r\n    updatePurchaseState (ingredients){\r\n        const sum = Object.keys(this.state.ingredients)\r\n        .map(igKey => {\r\n            return ingredients[igKey];\r\n        }).reduce((sum, el) => {\r\n            return sum+el;\r\n        },0);\r\n        this.setState({\r\n            purchasable : sum>0\r\n        })\r\n    }\r\n    addIngredientHandler = (type) => {\r\n            const oldCount = this.state.ingredients[type];\r\n            const updatedCount = oldCount +1;\r\n            const updatedIngredients = {\r\n                ...this.state.ingredients\r\n            };\r\n            updatedIngredients[type] = updatedCount;\r\n\r\n            const oldPrice = this.state.totalPrice;\r\n            const updatedPrice = oldPrice + INGERDIENT_PRICES[type];\r\n            this.setState({\r\n                ingredients : updatedIngredients,\r\n                totalPrice : updatedPrice\r\n            })\r\n            this.updatePurchaseState(updatedIngredients);\r\n    }\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if (oldCount <= 0){\r\n            return;\r\n        }\r\n            const updatedCount = oldCount - 1;\r\n            const updatedIngredients = {\r\n                ...this.state.ingredients\r\n            };\r\n            updatedIngredients[type] = updatedCount;\r\n            const oldPrice = this.state.totalPrice;\r\n            const updatedPrice = oldPrice - INGERDIENT_PRICES[type];\r\n            this.setState({\r\n                ingredients : updatedIngredients,\r\n                totalPrice : updatedPrice\r\n            })\r\n            this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () =>{\r\n        this.setState({purchased:true});\r\n    }\r\n    \r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchased : false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        // alert('You can continue with your order!')\r\n        \r\n        const queryParams = [];\r\n        for(let i in this.state.ingredients){\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname : '/checkout',\r\n            search : '?' + queryString\r\n        });\r\n    }\r\n    render(){\r\n        const disabledInfo =  {\r\n            ...this.state.ingredients\r\n        };\r\n        for( let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <=0 ;\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = <Spinner />\r\n\r\n        if(this.state.ingredients){\r\n            burger = <Auxiliary>\r\n                        <Burger ingredients = {this.state.ingredients}/>\r\n                        <BuildControls\r\n                        ingredientAdded = {this.addIngredientHandler}\r\n                        ingredientRemoved = {this.removeIngredientHandler}\r\n                        disabled = {disabledInfo}\r\n                        price = {this.state.totalPrice}\r\n                        purchasable = {this.state.purchasable}\r\n                        ordered = {this.purchaseHandler} />\r\n                    </Auxiliary>;\r\n            orderSummary = <OrderSummary ingredients={this.state.ingredients} \r\n                            price={this.state.totalPrice}\r\n                            orderCancel = {this.purchaseCancelHandler}\r\n                            orderContinue={this.purchaseContinueHandler}  />\r\n        }\r\n        if(this.state.loading){\r\n            orderSummary = <Spinner />\r\n        }\r\n        return(\r\n            <Auxiliary>\r\n                <Modal show ={this.state.purchased} hide={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n                 <p style={{border: '2px solid red', boxSizing:'border-box', boxShadow:'0 2px #eee', width:'35%'}}>Created with <span>💖</span> by Anirudh Viswanath</p>\r\n\r\n            </Auxiliary>\r\n        );\r\n    }\r\n}\r\nexport default BurgerBuilder;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n\r\n    switch(props.elementType){\r\n        case ('input') :\r\n            inputElement = <input className={classes.InputElement}\r\n                                  {...props.elementConfig}\r\n                                  value={props.value} \r\n                                  onChange={props.changed}/>\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea className={classes.InputElement} \r\n                                     {...props.elementConfig} \r\n                                     value={props.value} \r\n                                     onChange={props.changed}/>\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                                <select className={classes.InputElement} \r\n                                        value={props.value}\r\n                                        onChange={props.changed}>\r\n                                        {props.elementConfig.options.map(option => (\r\n                                            <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                                        ))}\r\n                                </select>\r\n                );\r\n            break;\r\n        \r\n        default: \r\n            inputElement = <input className={classes.InputElement} \r\n                                    {...props.elementConfig} \r\n                                    value={props.value} \r\n                                    onChange={props.changed}/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\nexport default input;","import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component{\r\n    state = {\r\n        orderForm : {\r\n            name : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'text',\r\n                    placeholder : 'Your Name'\r\n                },\r\n                value : '',\r\n                validation : {\r\n                    required : true\r\n                },\r\n                valid : false\r\n            },\r\n            email : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'email',\r\n                    placeholder : 'Your E-mail'\r\n                    },\r\n                    value : '',\r\n                    validation : {\r\n                        required : true\r\n                    },\r\n                    valid : false\r\n                },\r\n            street : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'text',\r\n                    placeholder : 'Street'\r\n                    },\r\n                    value : '',\r\n                    validation : {\r\n                        required : true\r\n                    },\r\n                    valid : false\r\n                },\r\n            zipcode : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'text',\r\n                    placeholder : 'ZIP code'\r\n                    },\r\n                    value : '',\r\n                    validation : {\r\n                        required : true\r\n                    },\r\n                    valid : false\r\n                },\r\n            country : {\r\n                elementType : 'input',\r\n                elementConfig : {\r\n                    type : 'text',\r\n                    placeholder : 'Country'\r\n                    },\r\n                    value : '',\r\n                    validation : {\r\n                        required : true\r\n                    },\r\n                    valid : false\r\n                },\r\n            deliveryMethod : {\r\n                elementType : 'select',\r\n                elementConfig : {\r\n                        options : [\r\n                            {value : 'fastest', displayValue : 'Fastest'},\r\n                            {value : 'cheapest', displayValue : 'Cheapest'}\r\n                        ]\r\n                    },\r\n                    value : 'cheapest',\r\n                    validation : {},\r\n                    valid : true\r\n                    }\r\n        },\r\n        loading : false\r\n    }\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading : true});\r\n        const formData = {};\r\n        for (let formIdentifierElement in this.state.orderForm){\r\n            formData[formIdentifierElement] = this.state.orderForm[formIdentifierElement].value;\r\n        }\r\n        const order = {\r\n            ingredients : this.props.ingredients,\r\n            price : this.props.price,\r\n            orderData : formData\r\n        }\r\n        axios.post('/orders.json',order)\r\n        .then(response => {\r\n            this.setState({loading : false });\r\n            this.props.history.push('/');\r\n        })\r\n        .catch(error => this.setState({ loading : false }));console.log(this.props.ingredients);\r\n    }\r\n\r\n    inputChangeHandler = (event, elementIndex) => {\r\n       const updatedOrderForm = {\r\n           ...this.state.orderForm\r\n       }\r\n       const formElement = {\r\n           ...updatedOrderForm[elementIndex]\r\n       }\r\n        formElement.value = event.target.value;\r\n        formElement.valid = this.checkValidity(formElement.value, formElement.validation);\r\n        updatedOrderForm[elementIndex] = formElement;\r\n        console.log(formElement);\r\n        this.setState({orderForm : updatedOrderForm})\r\n    }\r\n\r\n    checkValidity(value, rules){\r\n        let isValid = false;\r\n        \r\n        if(rules.required){\r\n            isValid = value.trim() !== '';\r\n        }\r\n        return isValid;\r\n    }\r\n    render(){\r\n        let formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id : key,\r\n                config : this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                    {formElementsArray.map( formElement => (\r\n                        <Input key={formElement.id}\r\n                        elementType={formElement.config.elementType} \r\n                        elementConfig={formElement.config.elementConfig} \r\n                        value={formElement.config.value}\r\n                        changed={(event) => this.inputChangeHandler(event, formElement.id)} />\r\n                    ))}\r\n                    <Button btnType=\"Success\">ORDER</Button>      \r\n            </form>\r\n        );\r\n        if(this.state.loading){\r\n            form = <Spinner />;\r\n        }\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter contact details!</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactData;","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width:'100%', margin:'auto', left:'-20px'}}>\r\n                <Burger ingredients = {props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\" click={props.orderCancel}>CANCEL</Button>\r\n            <Button btnType=\"Success\" click={props.orderContinue} >CONTINUE</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default checkoutSummary;","import React , { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport ContactData from './ContactData/ContactData';\r\nimport CheckoutSummary from '../../components/Orders/CheckoutSummary/CheckoutSummary';\r\n\r\nclass Checkout extends Component{\r\n    state = {\r\n            ingredients : null,\r\n            price : 0\r\n        }\r\n        \r\n    componentWillMount(){\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const ingredients = {};\r\n        let price = 0;\r\n        for( let param of query.entries()){\r\n            if(param[0] === 'price'){\r\n                price = param[1];\r\n            } else {\r\n                ingredients[param[0]] = +param[1];\r\n            }\r\n        }\r\n        this.setState({ingredients : ingredients, price : price});\r\n    }\r\n\r\n    orderCancelHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    orderContinueHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <CheckoutSummary \r\n                ingredients = {this.state.ingredients}\r\n                orderCancel={this.orderCancelHandler}\r\n                orderContinue={this.orderContinueHandler}/>\r\n                <Route path={this.props.match.path + '/contact-data'} \r\n                       render={(props) => <ContactData ingredients={this.state.ingredients} price= {this.state.price} {...props} />} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Checkout;","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients =[];\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({name : ingredientName, amount: props.ingredients[ingredientName]});\r\n    }\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return (\r\n        <span key={ig.name} style={{margin : '0 8px',\r\n                     display : 'inline-block',\r\n                     textTransform:'capitalize', \r\n                     border: '1px solid #eee', \r\n                     padding:'8px'}} >{ig.name} ({ig.amount})</span>\r\n        );\r\n    })\r\n    return(\r\n        <div className= {classes.Order}>\r\n            <p>Ingredients : {ingredientOutput}</p>\r\n            <p>Price : USD {props.price.toFixed(2)} </p>\r\n        </div>\r\n    );\r\n}\r\nexport default order;","import React, { Component } from 'react';\r\nimport Order from '../../components/Orders/Order';\r\nimport axios from '../../axios-orders';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders : [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/orders.json')\r\n             .then(res => {\r\n                const fetchedOrders = [];\r\n                for(let key in res.data){\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id : key\r\n                    });\r\n                }\r\n                this.setState({loading : false, orders:fetchedOrders});\r\n             })\r\n             .catch(err => {\r\n                 this.setState({loading : false});\r\n             });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 {this.state.orders.map( order => (\r\n                     <Order key={order.id} ingredients={order.ingredients} price={+order.price} />\r\n                 ) )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Orders;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nfunction App() {\n  return (\n    <div >\n      <Layout>\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Route path=\"/checkout\" component={Checkout} />\n        <Route path=\"/orders\" component={Orders}/>\n      </Layout>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n  <BrowserRouter basename={ProcessingInstruction.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n);\nReactDOM.render( app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}